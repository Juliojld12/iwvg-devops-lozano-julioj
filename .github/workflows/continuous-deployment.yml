name: CD
on:
  push:
    branches: [master]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  cd:
    name: Build & Push GHCR + Trigger Render
    runs-on: ubuntu-22.04

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: 🏷️ Read version/artifact and compose image tags (lowercase owner/repo)
        id: meta
        run: |
          VERSION=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
          ARTIFACT=$(mvn -q help:evaluate -Dexpression=project.artifactId -DforceStdout)
          REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "IMAGE=${{ env.REGISTRY }}/${REPO_LC}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${{ env.REGISTRY }}/${REPO_LC}:${VERSION}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=${{ env.REGISTRY }}/${REPO_LC}:latest" >> $GITHUB_ENV
          echo "Using image: ghcr.io/${REPO_LC}:${VERSION}"

      - name: 🔐 Login GHCR (GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build & Push (version + latest)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_VERSION }}
            ${{ env.IMAGE_LATEST }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

      # Guarda en GitHub -> Settings -> Secrets -> Actions: RENDER_DEPLOY_HOOK con la URL COMPLETA
      - name: 🚀 Deploy on Render
        run: |
          curl --fail -X POST "https://api.render.com/deploy/${{ secrets.RENDER_DEPLOY_HOOK_TOKEN }}" \
          && echo "✅ Deployment succeeded" \
          || (echo "❌ Deployment failed" && exit 1)
